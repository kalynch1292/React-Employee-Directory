{"version":3,"sources":["components/Table/index.js","utils/API.js","components/Search/index.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","className","filteredEmployees","map","emp","i","name","first","last","email","axios","get","Search","htmlFor","type","id","placeholder","aria-label","value","search","onChange","handleInputChange","onKeyPress","keyPress","App","state","employees","e","target","setState","searched","this","toLowerCase","searchedEmp","filter","fullName","includes","event","key","preventDefault","getUsers","API","then","res","console","log","data","results","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yQAwBeA,MApBf,SAAeC,GACb,OACE,wBAAOC,UAAU,QAAjB,UACE,gCACE,+BACE,sCACA,4CAIJ,gCAAQD,EAAME,kBAAkBC,KAAI,SAACC,EAAKC,GAAN,OAClC,+BACE,+BAAKD,EAAIE,KAAKC,MAAd,IAAsBH,EAAIE,KAAKE,QAC/B,6BAAKJ,EAAIK,UAFFJ,Y,iBCbF,EACD,WACN,OAAOK,IAAMC,IAAI,iFCYVC,MAbf,SAAgBZ,GACZ,OAEI,qBAAKC,UAAU,8CAAf,SACA,qBAAKA,UAAU,yCAAf,SACE,uBAAMA,UAAU,cAAhB,UACA,uBAAOY,QAAQ,WACb,uBAAOZ,UAAU,oBAAoBa,KAAK,OAAOC,GAAG,SAAST,KAAK,SAASU,YAAY,mBAAmBC,aAAW,SAASC,MAAOlB,EAAMmB,OAAQC,SAAUpB,EAAMqB,kBAAmBC,WAAatB,EAAMuB,mBCqDtMC,E,4MAvDbC,MAAM,CACJN,OAAQ,GACRjB,kBAAmB,GACnBwB,UAAU,I,EAOZL,kBAAoB,SAACM,GACnB,IAAMrB,EAAOqB,EAAEC,OAAOtB,KAChBY,EAAQS,EAAEC,OAAOV,MACvB,EAAKW,SAAL,eAAgBvB,EAAOY,IAAQ,WAC7B,IAAMY,EAAWC,KAAKN,MAAMN,OAAOa,cAC7BC,EAAcF,KAAKN,MAAMC,UAAUQ,QAAO,SAAA9B,GAC9C,IAAI+B,EAAQ,UAAM/B,EAAIE,KAAKC,MAAf,YAAwBH,EAAIE,KAAKE,MAE7C,OADA2B,EAAWA,EAASH,eACJI,SAASN,MAE3BC,KAAKF,SAAS,CAAC3B,kBAAmB+B,Q,EAItCV,SAAW,SAACc,GACU,UAAdA,EAAMC,KACRD,EAAME,kB,EAIZC,SAAW,WACTC,IAAeC,MAAK,SAAAC,GAClBC,QAAQC,IAAIF,EAAIG,KAAKC,SACrB,EAAKlB,SAAS,CAACH,UAAWiB,EAAIG,KAAKC,QAAS7C,kBAAmByC,EAAIG,KAAKC,c,kEA1B1EhB,KAAKS,a,+BA+BL,OAEE,sBAAKvC,UAAU,MAAf,UAEE,cAAC,EAAD,CACAkB,OAAQY,KAAKN,MAAMN,OACnBI,SAAUQ,KAAKR,SACfF,kBAAoBU,KAAKV,oBAC1B,cAAC,EAAD,CAAOnB,kBAAoB6B,KAAKN,MAAMvB,2B,GA/C3B8C,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OAEL,cAAC,EAAD,IAASC,SAASC,eAAe,SAMrCX,M","file":"static/js/main.a57ea08f.chunk.js","sourcesContent":["import React from \"react\";\r\n// import TableBody from '../TableBody';\r\nimport \"./style.css\";\r\n\r\nfunction Table(props) {\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n         \r\n        </tr>\r\n      </thead>\r\n      <tbody>{props.filteredEmployees.map((emp, i) => (\r\n        <tr key={i}>\r\n          <td>{emp.name.first} {emp.name.last}</td>\r\n          <td>{emp.email}</td>\r\n        </tr>\r\n      ))}</tbody>\r\n\r\n    </table>\r\n  );\r\n}\r\nexport default Table;","import axios from \"axios\";\r\n\r\nexport default {\r\n    getUsers: function () {\r\n        return axios.get(\"https://randomuser.me/api/?inc=gender,name,email,cell,picture,dob&results=30\");\r\n    }\r\n};","import React from 'react';\r\n\r\n\r\nfunction Search(props) {\r\n    return (\r\n\r\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n        <div className=\"container-fluid justify-content-center\">\r\n          <form className=\"d-flex form\">\r\n          <label htmlFor=\"search\"></label>\r\n            <input className=\"form-control me-2\" type=\"text\" id=\"search\" name=\"search\" placeholder=\"Search Employees\" aria-label=\"Search\" value={props.search} onChange={props.handleInputChange} onKeyPress= {props.keyPress} />\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\nexport default Search","import React, { Component } from 'react';\nimport Table from './components/Table';\nimport API from  './utils/API'\nimport \"./index.css\";\nimport Search from \"./components/Search\";\n\n\nclass App extends Component {\n  state={\n    search: \"\",\n    filteredEmployees: [],\n    employees:[]\n  }\n\n  componentDidMount(){\n    this.getUsers()\n  }\n  \n  handleInputChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({[name]: value}, function(){\n      const searched = this.state.search.toLowerCase()\n      const searchedEmp = this.state.employees.filter(emp => {\n        let fullName = `${emp.name.first} ${emp.name.last}`\n        fullName = fullName.toLowerCase()\n        return fullName.includes(searched)\n      })\n      this.setState({filteredEmployees: searchedEmp})\n    })\n  }\n\n  keyPress = (event) => {\n      if (event.key === \"Enter\") {\n        event.preventDefault()\n      }\n  }\n\n  getUsers = () => {\n    API.getUsers().then(res => {\n      console.log(res.data.results)\n      this.setState({employees: res.data.results, filteredEmployees: res.data.results})\n    })\n  }\n\n  render(){\n    return (\n      \n      <div className=\"App\">\n        {/* this line pulls in table component and passes employees from state*/}\n        <Search\n        search={this.state.search} \n        keyPress={this.keyPress} \n        handleInputChange= {this.handleInputChange} />\n       <Table filteredEmployees ={this.state.filteredEmployees}/>\n       {/* <Search exact path=\"/search\" component={Search} /> */}\n      </div>\n      \n    );\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  \n    <App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}